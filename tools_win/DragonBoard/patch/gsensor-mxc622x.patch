diff --git a/target/dragonboard/src/testcases/gsensortester/gsensortester.c b/target/dragonboard/src/testcases/gsensortester/gsensortester.c
index 9a640ff..05d5543 100644
--- a/target/dragonboard/src/testcases/gsensortester/gsensortester.c
+++ b/target/dragonboard/src/testcases/gsensortester/gsensortester.c
@@ -1,279 +1,74 @@
-/*
- * \file        gsensertester.c
- * \brief       
- *
- * \version     1.0.0
- * \date        2012年07月10日
- * \author      zhengjiewen  <zhengjiewen@allwinnertech.com>
- *
- * Copyright (c) 2012 Allwinner Technology. All Rights Reserved.
- *
- */
-
-
-#include <linux/input.h>
-
-#include <fcntl.h>
-#include <unistd.h>
-#include <errno.h>
-#include <string.h>
-#include <stdio.h>
-#include <stdlib.h>
-#include  <dirent.h>
-#include "dragonboard_inc.h"
-
-//#define DEBUG_SENSOR 1
-
-#define CONVERT                         (GRAVITY_EARTH / 256)
-
-#ifdef GSENSOR_DIRECT_X
-#define CONVERT_X                       (CONVERT)
-#else
-#define CONVERT_X                       (-CONVERT)
-#endif
-#ifdef GSENSOR_DIRECT_Y
-#define CONVERT_Y                       (CONVERT)
-#else
-#define CONVERT_Y                       (-CONVERT)
-#endif 
-#ifdef GSENSOR_DIRECT_Z
-#define CONVERT_Z                       (CONVERT)
-#else
-#define CONVERT_Z                       (-CONVERT)
-#endif
-
-#define INPUT_DIR                       "/dev/input"
-
-
-static int set_sysfs_input_attr(char *class_path,
-				const char *attr, char *value, int len)
-{
-	char path[256];
-	int fd;
-
-	if (class_path == NULL || *class_path == '\0'
-	    || attr == NULL || value == NULL || len < 1) {
-		return -EINVAL;
-	}
-	snprintf(path, sizeof(path), "%s/%s", class_path, attr);
-	path[sizeof(path) - 1] = '\0';
-	fd = open(path, O_RDWR);
-	if (fd < 0) {
-		return -errno;
-	}
-	if (write(fd, value, len) < 0) {
-		close(fd);
-		return -errno;
-	}
-	close(fd);
-
-	return 0;
-}
-
-//let it active
-
-/*
-static int poll__setDelay(struct sensors_poll_device_t *device,
-        int handle, int64_t ns) {
-
-	sensors_poll_context_t *dev = (sensors_poll_context_t *)device;
-	char buffer[20];
-	int ms=ns/1000000;
-	int bytes = sprintf(buffer, "%d\n", ms);
-
-	set_sysfs_input_attr(dev->class_path,"delay",buffer,bytes);
-
-	return 0;
-
-}
-*/
-
-static int sensor_get_class_path(char *class_path,char * sensor_name)
-{
-	char *dirname = "/sys/class/input";
-	char buf[256];
-	int res;
-	DIR *dir;
-	struct dirent *de;
-	int fd = -1;
-	int found = 0;
-
-	dir = opendir(dirname);
-	if (dir == NULL)
-		return -1;
-
-	while((de = readdir(dir))) {
-		if (strncmp(de->d_name, "input", strlen("input")) != 0) {
-		    continue;
-        	}
-
-		sprintf(class_path, "%s/%s", dirname, de->d_name);
-		snprintf(buf, sizeof(buf), "%s/name", class_path);
-
-		fd = open(buf, O_RDONLY);
-		if (fd < 0) {
-		    continue;
-		}
-		if ((res = read(fd, buf, sizeof(buf))) < 0) {
-		    close(fd);
-		    continue;
-		}
-		buf[res - 1] = '\0';
-		if (strcmp(buf, sensor_name) == 0) {
-		    found = 1;
-		    db_msg("sensor:find sensor %s\n",sensor_name);
-		    close(fd);
-		    break;
-		}
-
-		close(fd);
-		fd = -1;
-	}
-	closedir(dir);
-
-	if (found) {
-		return 0;
-	}else {
-		class_path = '\0';
-		return -1;
-	}
-
-}
-
-//打开sensor设备操作节点，
-//返回值：正确时为节点的fd,错误时为-1.
-
-static int open_input_device(char* sensor_name)
-{
-	char *filename;
-	int fd;
-	DIR *dir;
-	struct dirent *de;
-	char name[80];
-	char devname[256];
-	dir = opendir(INPUT_DIR);
-	if (dir == NULL)
-		return -1;
-
-	strcpy(devname, INPUT_DIR);
-	filename = devname + strlen(devname);
-	*filename++ = '/';
-
-	while ((de = readdir(dir))) {
-		if (de->d_name[0] == '.' &&
-		    (de->d_name[1] == '\0' ||
-		     (de->d_name[1] == '.' && de->d_name[2] == '\0')))
-			continue;
-		strcpy(filename, de->d_name);
-		fd = open(devname, O_RDONLY);
-		if (fd < 0) {
-			continue;
-		}
-
-
-		if (ioctl(fd, EVIOCGNAME(sizeof(name) - 1), &name) < 1) {
-			name[0] = '\0';
-		}
-
-		if (!strcmp(name, sensor_name)) {
-#ifdef DEBUG_SENSOR
-		db_msg("devname is %s \n",devname);
-#endif
-		} else {
-			close(fd);
-			continue;
-		}
-		closedir(dir);
-
-		return fd;
-
-	}
-	closedir(dir);
-
-	return -1;
-}
-
-int main(int argc, char *argv[])
-{
-    char dev_path[64];
-    int fd;
-    int x=0;
-    int y=0;
-    int z=0;
-    struct input_event event;
-    char buf[64];
-    char class_path[256];
-    int ret;
-    
-    INIT_CMD_PIPE();
-
-	/*
-    db_msg("arg count is %d \n",argc);
-
-	for(x=0;x<argc;x++){
-	db_msg("arg%d is: %s\n",x,argv[x]);	
-	}
-	*/
-	if(sensor_get_class_path(class_path,argv[4]) < 0) {
-		db_error("can't get the sensor class path\n");
-        goto err;	
-	}
-
-	ret=sprintf(buf,"%d",1);
-	if(0!=set_sysfs_input_attr(class_path,"enable",buf,ret)){
-	  	db_error("can't set sensor enable!!! (%s)\n", strerror(errno));
-        goto err;
-	}
-	  
-    fd=open_input_device(argv[4]);
-    if (fd== -1) {
-            db_error("can't open %s(%s)\n",argv[4], strerror(errno));
-            goto err;
-    }
-    /*
-    strncpy(dev_path, "/dev/input/event2", 64);
-
-        fd= open(dev_path, O_RDONLY);
-        if (fd== -1) {
-            db_error("can't open %s(%s)\n", dev_path, strerror(errno));
-            goto err;
-        }
-    */    
-        while(1){
-        	ret = read(fd, &event, sizeof(event));
-        	if(ret==-1){
-        		db_error("can't read %s(%s)\n", dev_path, strerror(errno));
-        		goto err;
-        		}
-       if (event.type == EV_ABS) {
-
-			  	switch (event.code) {
-		 	   	case ABS_X:
-				    x =event.value;
-             	  //db_msg("senser data is: x=%d\n",x);
-                         break;
-				case ABS_Y:
-					y =event.value;
-                  // db_msg("senser date is: y=%d\n",y);
-					break;				
-				case ABS_Z:
-					z =event.value;
-                 //   db_msg("senser date is:z=%d\n",z);
-					break;		
-					}
-				sprintf(buf,"(%d,%d,%d)",x,y,z);
-			  //db_msg("senser data is:x=%d,y=%d,z=%d\n",x,y,z);
-				SEND_CMD_PIPE_OK_EX(buf);
-                }
-        	
-       sleep(1);
-
-    }
-     close(fd);
-err:
-    SEND_CMD_PIPE_FAIL();
-    EXIT_CMD_PIPE();
-    return 0;
-}
-
-
+/*
+ * \file        gsensortester.c
+ * \brief
+ *
+ * \version     1.0.0
+ * \date        2012年07月26日
+ * \author      Martin <zhengjiewen@allwinnertech.com>
+ *
+ * Copyright (c) 2012 Allwinner Technology. All Rights Reserved.
+ *
+ */
+#include <linux/input.h>
+
+#include <fcntl.h>
+#include <unistd.h>
+#include <errno.h>
+#include <string.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <dirent.h>
+#include "dragonboard_inc.h"
+
+/*use 'm' as magic number */
+#define MXC622X_IOM                     'm'
+
+/*  IOCTLs for MXC622X device */
+#define MXC622X_IOC_PWRON               _IO (MXC622X_IOM, 0x00)
+#define MXC622X_IOC_PWRDN               _IO (MXC622X_IOM, 0x01)
+#define MXC622X_IOC_READXYZ             _IOR(MXC622X_IOM, 0x05, int[3])
+#define MXC622X_IOC_READSTATUS          _IOR(MXC622X_IOM, 0x07, int[3])
+#define MXC622X_IOC_SETDETECTION        _IOW(MXC622X_IOM, 0x08, unsigned char)
+
+
+#define SENSOR_PATH                     "/dev/mxc622x"
+
+int main(int argc, char *argv[])
+{
+    int fd;
+    int data[3];
+    char buf[64];
+
+    INIT_CMD_PIPE();
+
+    db_msg("open sensor mxc622x\n");
+    fd = open(SENSOR_PATH, O_NONBLOCK);
+    if (fd < 0) {
+        db_error("Unable to open sensor mxc622x\n");
+        goto err;
+    }
+
+    db_msg("power on sensor mxc622x\n");
+    if (ioctl(fd, MXC622X_IOC_PWRON, 0)) {
+        db_error("can't power on sensor mxc622x\n");
+        close(fd);
+        goto err;
+    }
+
+    while (1) {
+        if (ioctl(fd, MXC622X_IOC_READXYZ, data)) {
+            db_error("can't read sensor mxc622x\n");
+            close(fd);
+            goto err;
+        }
+
+        snprintf(buf, sizeof(buf), "(%d,%d,%d)", data[0], data[1], data[2]);
+        SEND_CMD_PIPE_OK_EX(buf);
+        sleep(1);
+    }
+
+err:
+    SEND_CMD_PIPE_FAIL();
+    EXIT_CMD_PIPE();
+    return -1;
+}
diff --git a/target/dragonboard/src/testcases/gsensortester/gsensortester.sh b/target/dragonboard/src/testcases/gsensortester/gsensortester.sh
index 54b2ef3..403082c 100755
--- a/target/dragonboard/src/testcases/gsensortester/gsensortester.sh
+++ b/target/dragonboard/src/testcases/gsensortester/gsensortester.sh
@@ -21,18 +21,4 @@ fi
 
 sleep 3
 
-device_name=`script_fetch "gsensor" "device_name"`
-for event in $(cd /sys/class/input; ls event*); do
-    name=`cat /sys/class/input/$event/device/name`
-    case $name in
-        $device_name)
-            #SEND_CMD_PIPE_OK $3
-            gsensortester $* "$device_name" &
-            exit 0
-            ;;
-        *)
-            ;;
-    esac
-done
-
-SEND_CMD_PIPE_FAIL $3
+gsensortester $* "$device_name" &
